{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenthibichni/OneDrive/Front-end/ReactJS/Project/todo-redux/src/pages/TodoList/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, ListGroup, Form } from 'react-bootstrap';\nimport ModifyListModal from './ModifyListModal';\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\nimport { getTaskList, createTask, editTask, deleteTask, completeTask } from '../../redux/actions';\nimport './style.css';\n\nfunction TodoList({\n  todoList,\n  completedList,\n  getTaskList,\n  createTask,\n  editTask,\n  deleteTask,\n  completeTask\n}) {\n  const [searchKey, setSearchKey] = useState('');\n  const [isShowModifyModal, setIsShowModifyModal] = useState(false);\n  const [modifyModalData, setModifyModalData] = useState({});\n  const [isShowConfirmModal, setIsShowConfirmModal] = useState(false);\n  const [confirmModalData, setConfirmModalData] = useState({});\n  const [isShowMore, setIsShowMore] = useState(false);\n  const [moreInfoList, setMoreInfoList] = useState([]);\n  useEffect(() => {\n    getTaskList();\n  }, []);\n  const filterTodoListData = todoList.filter(item => {\n    return item.title.toLowerCase().indexOf(searchKey.toLowerCase()) !== -1;\n  }); // Show/hide Modify Modal\n\n  const handleShowModifyModal = (modifyType, modifyValue) => {\n    setIsShowModifyModal(true);\n\n    if (modifyType === 'create') {\n      setModifyModalData({\n        type: modifyType\n      });\n    } else {\n      setModifyModalData({\n        type: modifyType,\n        title: modifyValue.title,\n        description: modifyValue.description,\n        id: modifyValue.id\n      });\n    }\n  };\n\n  const handleHideModifyModal = () => {\n    setIsShowModifyModal(false);\n    setModifyModalData({});\n  }; // Show/hide Confirm Modal\n\n\n  const handleShowConfirmModal = index => {\n    setIsShowConfirmModal(true);\n    setConfirmModalData({\n      index: index\n    });\n  };\n\n  const handleHideConfirmModal = () => {\n    setIsShowConfirmModal(false);\n    setConfirmModalData({});\n  };\n\n  const handleSubmitForm = (values, type, editedId) => {\n    if (type === 'create') {\n      createTask({\n        title: values.title,\n        description: values.description\n      });\n    } else {\n      editTask({\n        id: editedId,\n        title: values.title,\n        description: values.description\n      });\n    }\n\n    setIsShowModifyModal(false);\n  };\n\n  const handleDeleteTask = deletedId => {\n    deleteTask({\n      id: deletedId\n    });\n    setIsShowConfirmModal(false);\n  };\n\n  const handleChangeSearch = e => {\n    const {\n      value\n    } = e.target;\n    setSearchKey(value);\n  };\n\n  const handleToggleMoreInfo = id => {\n    const moreInfoIndex = moreInfoList.findIndex(moreId => moreId === id);\n\n    if (moreInfoIndex === -1) {\n      setMoreInfoList([...moreInfoList, id]);\n    } else {\n      const newMoreInfoList = moreInfoList;\n      newMoreInfoList.splice(moreInfoIndex, 1);\n      setMoreInfoList([...newMoreInfoList]);\n    }\n  };\n\n  const handleCompleteTask = (e, completeItem) => {\n    e.preventDefault();\n    const {\n      checked\n    } = e.target;\n\n    if (checked) {\n      completeTask({\n        completeItem\n      });\n    }\n  };\n\n  const renderTodoTaskList = () => {\n    return filterTodoListData.map((item, itemIndex) => {\n      if (!isShowMore && itemIndex > 4) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        key: `todolist-${item.id}-${itemIndex}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-item-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        onChange: e => handleCompleteTask(e, item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }\n      }, item.title)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-item-action\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outline-secondary\",\n        className: \"mr-2\",\n        onClick: () => handleToggleMoreInfo(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, moreInfoList.findIndex(moreId => moreId === item.id) === -1 ? 'Hiện' : 'Ẩn'), /*#__PURE__*/React.createElement(Button, {\n        variant: \"outline-danger\",\n        className: \"mr-2\",\n        onClick: () => handleShowConfirmModal(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, \"X\\xF3a\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"outline-primary\",\n        onClick: () => handleShowModifyModal('edit', item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, \"S\\u1EEDa\"))), moreInfoList.findIndex(id => id === item.id) !== -1 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"todo-item-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, item.description));\n    });\n  };\n\n  const renderCompleteTaskList = () => {\n    return completedList.map((item, itemIndex) => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        key: itemIndex,\n        className: \"d-flex\",\n        style: {\n          backgroundColor: '#DDDDDD'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        type: \"checkbox\",\n        checked: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"ml-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"del\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 31\n        }\n      }, item.title)));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Todo List\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    placeholder: \"T\\xECm ki\\u1EBFm...\",\n    onChange: e => handleChangeSearch(e),\n    style: {\n      width: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => handleShowModifyModal('create'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"Th\\xEAm c\\xF4ng vi\\u1EC7c\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, renderTodoTaskList()), !isShowMore && filterTodoListData.length > 5 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    className: \"rounded-pill\",\n    onClick: () => setIsShowMore(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"Hi\\u1EC3n th\\u1ECB th\\xEAm\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, \"C\\xF4ng vi\\u1EC7c \\u0111\\xE3 ho\\xE0n th\\xE0nh\"), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, renderCompleteTaskList())))), /*#__PURE__*/React.createElement(ModifyListModal, {\n    isShowModal: isShowModifyModal,\n    handleHideModal: handleHideModifyModal,\n    handleSubmitForm: handleSubmitForm,\n    modalData: modifyModalData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmDeleteModal, {\n    isShowModal: isShowConfirmModal,\n    handleHideModal: handleHideConfirmModal,\n    handleDeleteTask: handleDeleteTask,\n    modalData: confirmModalData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  const {\n    todoList,\n    completedList\n  } = state.todoListReducer;\n  return {\n    todoList,\n    completedList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTaskList: params => dispatch(getTaskList(params)),\n    createTask: params => dispatch(createTask(params)),\n    editTask: params => dispatch(editTask(params)),\n    deleteTask: params => dispatch(deleteTask(params)),\n    completeTask: params => dispatch(completeTask(params))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["/Users/nguyenthibichni/OneDrive/Front-end/ReactJS/Project/todo-redux/src/pages/TodoList/index.jsx"],"names":["React","useState","useEffect","connect","Button","ListGroup","Form","ModifyListModal","ConfirmDeleteModal","getTaskList","createTask","editTask","deleteTask","completeTask","TodoList","todoList","completedList","searchKey","setSearchKey","isShowModifyModal","setIsShowModifyModal","modifyModalData","setModifyModalData","isShowConfirmModal","setIsShowConfirmModal","confirmModalData","setConfirmModalData","isShowMore","setIsShowMore","moreInfoList","setMoreInfoList","filterTodoListData","filter","item","title","toLowerCase","indexOf","handleShowModifyModal","modifyType","modifyValue","type","description","id","handleHideModifyModal","handleShowConfirmModal","index","handleHideConfirmModal","handleSubmitForm","values","editedId","handleDeleteTask","deletedId","handleChangeSearch","e","value","target","handleToggleMoreInfo","moreInfoIndex","findIndex","moreId","newMoreInfoList","splice","handleCompleteTask","completeItem","preventDefault","checked","renderTodoTaskList","map","itemIndex","renderCompleteTaskList","backgroundColor","width","length","mapStateToProps","state","todoListReducer","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, ListGroup, Form } from 'react-bootstrap';\r\n\r\nimport ModifyListModal from './ModifyListModal';\r\nimport ConfirmDeleteModal from './ConfirmDeleteModal';\r\n\r\nimport {\r\n  getTaskList,\r\n  createTask,\r\n  editTask,\r\n  deleteTask,\r\n  completeTask,\r\n} from '../../redux/actions';\r\n\r\nimport './style.css';\r\n\r\nfunction TodoList({\r\n  todoList,\r\n  completedList,\r\n  getTaskList,\r\n  createTask,\r\n  editTask,\r\n  deleteTask,\r\n  completeTask,\r\n}) {\r\n  const [searchKey, setSearchKey] = useState('');\r\n  const [isShowModifyModal, setIsShowModifyModal] = useState(false);\r\n  const [modifyModalData, setModifyModalData] = useState({});\r\n  const [isShowConfirmModal, setIsShowConfirmModal] = useState(false);\r\n  const [confirmModalData, setConfirmModalData] = useState({});\r\n  const [isShowMore, setIsShowMore] = useState(false);\r\n  const [moreInfoList, setMoreInfoList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getTaskList();\r\n  },[]);\r\n\r\n  const filterTodoListData = todoList.filter((item) => {\r\n    return (item.title.toLowerCase()).indexOf(searchKey.toLowerCase()) !== -1;\r\n  });\r\n  \r\n  // Show/hide Modify Modal\r\n  const handleShowModifyModal = (modifyType, modifyValue) => {\r\n    setIsShowModifyModal(true);\r\n    if (modifyType === 'create') {\r\n      setModifyModalData({\r\n        type: modifyType,\r\n      });\r\n    } else {\r\n      setModifyModalData({\r\n        type: modifyType,\r\n        title: modifyValue.title,\r\n        description: modifyValue.description,\r\n        id: modifyValue.id,\r\n      });\r\n    } \r\n  }\r\n  const handleHideModifyModal = () => {\r\n    setIsShowModifyModal(false);\r\n    setModifyModalData({});\r\n  }\r\n\r\n  // Show/hide Confirm Modal\r\n  const handleShowConfirmModal = (index) => {\r\n    setIsShowConfirmModal(true);\r\n    setConfirmModalData({ index: index });\r\n  }\r\n  const handleHideConfirmModal = () => {\r\n    setIsShowConfirmModal(false);\r\n    setConfirmModalData({});\r\n  }\r\n\r\n  const handleSubmitForm = (values, type, editedId) => {\r\n    if (type === 'create') {\r\n      createTask({\r\n        title: values.title,\r\n        description: values.description,\r\n      });\r\n    } else {\r\n      editTask({\r\n        id: editedId,\r\n        title: values.title,\r\n        description: values.description,\r\n      });\r\n    }\r\n    setIsShowModifyModal(false);\r\n  }\r\n\r\n  const handleDeleteTask = (deletedId) => {\r\n    deleteTask({ id: deletedId });\r\n    setIsShowConfirmModal(false);\r\n  }\r\n\r\n  const handleChangeSearch = (e) => {\r\n    const { value } = e.target;\r\n    setSearchKey(value);\r\n  }\r\n\r\n  const handleToggleMoreInfo = (id) => {\r\n    const moreInfoIndex = moreInfoList.findIndex((moreId) => moreId === id);\r\n    if (moreInfoIndex === -1) {\r\n      setMoreInfoList([\r\n        ...moreInfoList,\r\n        id,\r\n      ]);\r\n    } else {\r\n      const newMoreInfoList = moreInfoList;\r\n      newMoreInfoList.splice(moreInfoIndex, 1);\r\n      setMoreInfoList([\r\n        ...newMoreInfoList,\r\n      ]);\r\n    }\r\n  }\r\n\r\n  const handleCompleteTask = (e, completeItem) => {\r\n    e.preventDefault();\r\n    const { checked } = e.target;\r\n    if (checked) {\r\n      completeTask({ completeItem });\r\n    }\r\n  }\r\n  \r\n  const renderTodoTaskList = () => {\r\n    return filterTodoListData.map((item, itemIndex) => {\r\n      if (!isShowMore && itemIndex > 4) {\r\n        return null;\r\n      }\r\n      return (\r\n        <ListGroup.Item key={`todolist-${item.id}-${itemIndex}`}>\r\n          <div className=\"todo-item-container\">\r\n            <div className=\"d-flex\">\r\n              <Form.Check type=\"checkbox\" onChange={(e) => handleCompleteTask(e, item)} />\r\n              <p className=\"ml-2\">{item.title}</p>\r\n            </div>\r\n            <div className=\"todo-item-action\">\r\n              <Button\r\n                variant=\"outline-secondary\"\r\n                className=\"mr-2\"\r\n                onClick={() => handleToggleMoreInfo(item.id)}\r\n              >\r\n                {moreInfoList.findIndex((moreId) => moreId === item.id) === -1 ? 'Hiện' : 'Ẩn'}\r\n              </Button>\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                className=\"mr-2\"\r\n                onClick={() => handleShowConfirmModal(item.id)}\r\n              >\r\n                Xóa\r\n              </Button>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                onClick={() => handleShowModifyModal('edit', item)}\r\n              >\r\n                Sửa\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          {(moreInfoList.findIndex((id) => id === item.id) !== -1) && (\r\n            <div className=\"todo-item-description\">\r\n              {item.description}\r\n            </div>\r\n          )}\r\n        </ListGroup.Item>\r\n      );\r\n    });\r\n  }\r\n\r\n  const renderCompleteTaskList = () => {\r\n    return completedList.map((item, itemIndex) => {\r\n      return (\r\n        <ListGroup.Item key={itemIndex} className=\"d-flex\" style={{ backgroundColor: '#DDDDDD' }}>\r\n          <Form.Check type=\"checkbox\" checked />\r\n          <p className=\"ml-2\"><del>{item.title}</del></p>\r\n        </ListGroup.Item>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"todo-list-container\">\r\n        <div className=\"todo-list-content\">\r\n          <h4>Todo List</h4>\r\n          <div className=\"todo-list-title\">\r\n            <input\r\n              className=\"form-control\"\r\n              placeholder=\"Tìm kiếm...\"\r\n              onChange={(e) => handleChangeSearch(e)}\r\n              style={{ width: 300 }}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => handleShowModifyModal('create')}>\r\n              Thêm công việc\r\n            </Button>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <ListGroup>\r\n              {renderTodoTaskList()}\r\n            </ListGroup>\r\n            {(!isShowMore && filterTodoListData.length > 5) && (\r\n              <div className=\"d-flex justify-content-center mt-2\">\r\n                <Button\r\n                  variant=\"outline-secondary\"\r\n                  className=\"rounded-pill\"\r\n                  onClick={() => setIsShowMore(true)}\r\n                >\r\n                  Hiển thị thêm\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <h5>Công việc đã hoàn thành</h5>\r\n            <ListGroup>\r\n              {renderCompleteTaskList()}\r\n            </ListGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ModifyListModal\r\n        isShowModal={isShowModifyModal}\r\n        handleHideModal={handleHideModifyModal}\r\n        handleSubmitForm={handleSubmitForm}\r\n        modalData={modifyModalData}\r\n      />\r\n      <ConfirmDeleteModal\r\n        isShowModal={isShowConfirmModal}\r\n        handleHideModal={handleHideConfirmModal}\r\n        handleDeleteTask={handleDeleteTask}\r\n        modalData={confirmModalData}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { todoList, completedList } = state.todoListReducer;\r\n  return {\r\n    todoList,\r\n    completedList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getTaskList: (params) => dispatch(getTaskList(params)),\r\n    createTask: (params) => dispatch(createTask(params)),\r\n    editTask: (params) => dispatch(editTask(params)),\r\n    deleteTask: (params) => dispatch(deleteTask(params)),\r\n    completeTask: (params) => dispatch(completeTask(params)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);"]},"metadata":{},"sourceType":"module"}