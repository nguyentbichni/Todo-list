{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { GET_TASK_LIST, GET_TASK_LIST_SUCCESS, GET_TASK_LIST_FAIL, CREATE_TASK, CREATE_TASK_SUCCESS, CREATE_TASK_FAIL, EDIT_TASK, EDIT_TASK_SUCCESS, EDIT_TASK_FAIL, DELETE_TASK, DELETE_TASK_SUCCESS, DELETE_TASK_FAIL } from '../constants';\nconst apiUrl = 'http://localhost:3001';\n\nfunction* getTaskListSaga(action) {\n  try {\n    const response = yield axios.get(`${apiUrl}/todoList`);\n    const data = response.data;\n    console.log('Log: : function*getTaskListSaga -> data', data);\n    yield put({\n      type: GET_TASK_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: GET_TASK_LIST_FAIL,\n      payload: error\n    });\n  }\n}\n\nfunction* createTaskSaga(action) {\n  try {\n    const response = yield axios.post(`${apiUrl}/todoList`, action.payload);\n    const data = response.data;\n    yield put({\n      type: CREATE_TASK_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: CREATE_TASK_FAIL,\n      payload: error\n    });\n  }\n}\n\nfunction* editTaskSaga(action) {\n  try {\n    const {\n      id,\n      title,\n      description\n    } = action.payload;\n    const response = yield axios.put(`${apiUrl}/todoList/${id}`, {\n      title,\n      description\n    });\n    const data = response.data;\n    yield put({\n      type: EDIT_TASK_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: EDIT_TASK_FAIL,\n      payload: error\n    });\n  }\n}\n\nfunction* deleteTaskSaga(action) {\n  try {\n    const {\n      id\n    } = action.payload;\n    yield axios.delete(`${apiUrl}/todoList/${id}`);\n    yield put({\n      type: DELETE_TASK_SUCCESS,\n      payload: {\n        id\n      }\n    });\n  } catch (error) {\n    yield put({\n      type: DELETE_TASK_FAIL,\n      payload: error\n    });\n  }\n}\n\nexport default function* todoListSaga() {\n  yield takeEvery(GET_TASK_LIST, getTaskListSaga);\n  yield takeEvery(CREATE_TASK, createTaskSaga);\n  yield takeEvery(EDIT_TASK, editTaskSaga);\n  yield takeEvery(DELETE_TASK, deleteTaskSaga);\n}","map":{"version":3,"sources":["/Users/nguyenthibichni/OneDrive/Front-end/ReactJS/Project/todo-redux/src/redux/sagas/todoList.saga.js"],"names":["put","takeEvery","axios","GET_TASK_LIST","GET_TASK_LIST_SUCCESS","GET_TASK_LIST_FAIL","CREATE_TASK","CREATE_TASK_SUCCESS","CREATE_TASK_FAIL","EDIT_TASK","EDIT_TASK_SUCCESS","EDIT_TASK_FAIL","DELETE_TASK","DELETE_TASK_SUCCESS","DELETE_TASK_FAIL","apiUrl","getTaskListSaga","action","response","get","data","console","log","type","payload","error","createTaskSaga","post","editTaskSaga","id","title","description","deleteTaskSaga","delete","todoListSaga"],"mappings":"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","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  GET_TASK_LIST,\r\n  GET_TASK_LIST_SUCCESS,\r\n  GET_TASK_LIST_FAIL,\r\n  CREATE_TASK,\r\n  CREATE_TASK_SUCCESS,\r\n  CREATE_TASK_FAIL,\r\n  EDIT_TASK,\r\n  EDIT_TASK_SUCCESS,\r\n  EDIT_TASK_FAIL,\r\n  DELETE_TASK,\r\n  DELETE_TASK_SUCCESS,\r\n  DELETE_TASK_FAIL,\r\n} from '../constants';\r\n\r\nconst apiUrl = 'http://localhost:3001';\r\n\r\nfunction* getTaskListSaga(action){\r\n  try {\r\n    const response = yield axios.get(`${apiUrl}/todoList`);\r\n    const data = response.data;\r\n    console.log('Log: : function*getTaskListSaga -> data', data);\r\n    yield put({\r\n      type: GET_TASK_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: GET_TASK_LIST_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* createTaskSaga(action){\r\n  try {\r\n    const response = yield axios.post(`${apiUrl}/todoList`, action.payload);\r\n    const data = response.data;\r\n    yield put({\r\n      type: CREATE_TASK_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: CREATE_TASK_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* editTaskSaga(action){\r\n  try {\r\n    const { id, title, description } = action.payload;\r\n    const response = yield axios.put(`${apiUrl}/todoList/${id}`, { title, description });\r\n    const data = response.data;\r\n    yield put({\r\n      type: EDIT_TASK_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: EDIT_TASK_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* deleteTaskSaga(action){\r\n  try {\r\n    const { id } = action.payload;\r\n    yield axios.delete(`${apiUrl}/todoList/${id}`);\r\n    yield put({\r\n      type: DELETE_TASK_SUCCESS,\r\n      payload: { id },\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: DELETE_TASK_FAIL,\r\n      payload: error,\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* todoListSaga(){\r\n  yield takeEvery(GET_TASK_LIST, getTaskListSaga);\r\n  yield takeEvery(CREATE_TASK, createTaskSaga);\r\n  yield takeEvery(EDIT_TASK, editTaskSaga);\r\n  yield takeEvery(DELETE_TASK, deleteTaskSaga);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}