{"ast":null,"code":"var _jsxFileName = \"/Users/nguyenthibichni/OneDrive/Front-end/ReactJS/Project/todo-redux/src/pages/TodoList/ModifyListModal/index.jsx\";\nimport React from 'react';\nimport { Button, Modal, Form as FormBootstrap } from 'react-bootstrap';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nfunction ModifyListModal({\n  isShowModal,\n  handleHideModal,\n  handleSubmitForm,\n  modalData\n}) {\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: isShowModal,\n    onHide: handleHideModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, `${modalData.type === 'create' ? 'Add' : 'Edit'} Task`)), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: modalData.type === 'create' ? {\n      title: '',\n      description: ''\n    } : {\n      title: modalData.title,\n      description: modalData.description\n    },\n    validationSchema: Yup.object({\n      title: Yup.string().required('Nội dung công việc không được để trống').max(50, 'Nội dung công việc không được quá 50 kí tự'),\n      description: Yup.string().required('Mô tả công việc không được để trống').max(50, 'Mô tả công việc không được quá 200 kí tự')\n    }),\n    onSubmit: values => handleSubmitForm(values, modalData.type, modalData.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormBootstrap.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Task\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"title\",\n    className: \"form-control\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \" Content of Task\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"description\",\n    className: \"form-control\",\n    type: \"text\",\n    as: \"textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 50\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: () => {\n      handleHideModal();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Save Changes\")))));\n}\n\nexport default ModifyListModal;","map":{"version":3,"sources":["/Users/nguyenthibichni/OneDrive/Front-end/ReactJS/Project/todo-redux/src/pages/TodoList/ModifyListModal/index.jsx"],"names":["React","Button","Modal","Form","FormBootstrap","Formik","Field","ErrorMessage","Yup","ModifyListModal","isShowModal","handleHideModal","handleSubmitForm","modalData","type","title","description","object","string","required","max","values","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form as FormBootstrap,\r\n} from 'react-bootstrap';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nfunction ModifyListModal({\r\n  isShowModal,\r\n  handleHideModal,\r\n  handleSubmitForm,\r\n  modalData,\r\n}) {\r\n  return (\r\n    <Modal show={isShowModal} onHide={handleHideModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                      {`${modalData.type === 'create' ? 'Add' : 'Edit'} Task`}\r\n                   </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Formik\r\n                    initialValues={modalData.type === 'create'\r\n                    ? {\r\n                      title: '',\r\n                      description: '',\r\n                    }\r\n                    : {\r\n                      title: modalData.title,\r\n                      description: modalData.description,\r\n                    }\r\n                  }\r\n                  validationSchema={Yup.object({\r\n                    title: Yup.string()\r\n                      .required('Nội dung công việc không được để trống')\r\n                      .max(50, 'Nội dung công việc không được quá 50 kí tự'),\r\n                    description: Yup.string()\r\n                      .required('Mô tả công việc không được để trống')\r\n                      .max(50, 'Mô tả công việc không được quá 200 kí tự'),\r\n                  })}\r\n                    onSubmit = {(values) => handleSubmitForm(values, modalData.type, modalData.id)}\r\n                >\r\n                <Form>\r\n                <Modal.Body>\r\n                    <FormBootstrap.Group>\r\n                    <label htmlFor=\"title\">Task</label>\r\n                    <Field  name=\"title\" className=\"form-control\" type=\"text\">\r\n\r\n                    </Field>\r\n                    <div className=\"text-danger\"><ErrorMessage name=\"title\" /></div>\r\n\r\n                    <label htmlFor=\"title\"> Content of Task</label>\r\n                    <Field  name=\"description\" className=\"form-control\" type=\"text\" as=\"textarea\">\r\n                    </Field>\r\n                    <div className=\"text-danger\"><ErrorMessage name=\"description\" /></div>\r\n\r\n                    </FormBootstrap.Group>            \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => {handleHideModal()}}>\r\n                        Close\r\n                    </Button>\r\n                    <Button  type=\"submit\" variant=\"primary\">\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n                </Form>\r\n                </Formik>\r\n            </Modal>\r\n  );\r\n}\r\n\r\nexport default ModifyListModal;\r\n"]},"metadata":{},"sourceType":"module"}